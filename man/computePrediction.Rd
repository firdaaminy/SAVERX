% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/computePrediction.R
\name{computePrediction}
\alias{computePrediction}
\title{Wrapper function for the autoencoder prediction + filtering step}
\usage{
computePrediction(out.dir, input.file.name = NULL, data.matrix = NULL,
  data.species = c("Human", "Mouse", "Others"), use.pretrain = F,
  pretrained.weights.file = "", model.species = c("Human", "Mouse",
  "Joint"), model.nodes.ID = NULL, is.large.data = F,
  clearup.python.session = T, batch_size = NULL, ...)
}
\arguments{
\item{out.dir}{a directory store all intemediate files. Can be generated automatically by this function is called by \code{computePrediction}}

\item{input.file.name}{Can be either .txt, .csv or .rds files that store the data matrix gene by cell, or can be NULL is \code{data.matrix} is provided. The rds file can either store the data as a regular matrix or a sparse matrix}

\item{data.matrix}{a matrix of UMI counts. Should be NULL if input.file.name is provided. The matrix is gene by cell with gene and cell names. Can be either a regular or sparse matrix.}

\item{data.species}{The species of the dataset}

\item{use.pretrain}{Use a pretrained model or not}

\item{pretrained.weights.file}{If a pretrained model is used, provide the file storing the autoencoder model weights. It should have an extension of ".hdf5" and is the saved weights from the Python package \code{sctransfer}}

\item{model.species}{The species of the pretrained model}

\item{model.nodes.ID}{The vector of node IDs of the pretrained model (only needed for the species of the data when the pre-trained model is joint). Set to NULL if running SAVER-X without pretraining.}

\item{is.large.data}{If the data is very large, it may take too much RAM and setting this parameter to True can reduce RAM by writing intermediate Python ouput files to disk instead of directly passing it to R. However, setting this to True can increase the computation time}

\item{clearup.python.session}{Whether to clear up everything in the Python session after computation or not. This clears up everything in Python, so you need to start a new R session to run \code{saverx} function again.}

\item{batch_size}{batch size of the autoencoder. Default is NULL, where the batch size is automatically determined by \code{max(number of cells / 50, 32)}}

\item{...}{more arguments passed to \code{autoFilterCV}}

\item{save.ori}{Whether save the original.file.name to a new file}
}
\value{
RDS file saved for the autoencoder prediction + filtering result
}
\description{
Wrapper function for the autoencoder prediction + filtering step
}
